# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.26)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS boost python arch tf gf pegtl js trace work plug vt ts ar kind sdf ndr sdr pcp usd usdGeom usdVol usdMedia usdShade usdLux usdProc usdRender usdHydra usdRi usdSemantics usdSkel usdUI usdUtils usdPhysics usdMtlx usdValidation usdGeomValidators usdShadeValidators usdSkelValidators usdUtilsValidators garch hf hio cameraUtil pxOsd geomUtil glf hgi hgiGL hgiInterop hd hdar hdGp hdsi hdMtlx hdSt hdx usdImaging usdImagingGL usdProcImaging usdRiPxrImaging usdSkelImaging usdVolImaging usdAppUtils usdviewq usdBakeMtlx)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target boost
add_library(boost SHARED IMPORTED)

set_target_properties(boost PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target python
add_library(python SHARED IMPORTED)

set_target_properties(python PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_BOOST_PYTHON_NO_PY_SIGNATURES"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "boost;Python3::Python"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES ""
)

# Create imported target arch
add_library(arch SHARED IMPORTED)

set_target_properties(arch PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "dl;m"
)

# Create imported target tf
add_library(tf SHARED IMPORTED)

set_target_properties(tf PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "arch;python;TBB::tbb;Python3::Python"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target gf
add_library(gf SHARED IMPORTED)

set_target_properties(gf PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "arch;tf;python;Python3::Python"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES ""
)

# Create imported target pegtl
add_library(pegtl SHARED IMPORTED)

set_target_properties(pegtl PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "arch"
)

# Create imported target js
add_library(js SHARED IMPORTED)

set_target_properties(js PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf"
)

# Create imported target trace
add_library(trace SHARED IMPORTED)

set_target_properties(trace PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "arch;js;tf;TBB::tbb"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target work
add_library(work SHARED IMPORTED)

set_target_properties(work PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;trace;TBB::tbb"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target plug
add_library(plug SHARED IMPORTED)

set_target_properties(plug PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "arch;tf;js;trace;work;TBB::tbb"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target vt
add_library(vt SHARED IMPORTED)

set_target_properties(vt PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "arch;tf;gf;trace;python;TBB::tbb;Python3::Python"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target ts
add_library(ts SHARED IMPORTED)

set_target_properties(ts PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "vt;gf;tf"
)

# Create imported target ar
add_library(ar SHARED IMPORTED)

set_target_properties(ar PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "arch;js;tf;plug;vt;python;TBB::tbb;Python3::Python"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target kind
add_library(kind SHARED IMPORTED)

set_target_properties(kind PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;plug"
)

# Create imported target sdf
add_library(sdf SHARED IMPORTED)

set_target_properties(sdf PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "arch;tf;gf;pegtl;trace;ts;vt;work;ar;python;TBB::tbb;Python3::Python"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target ndr
add_library(ndr SHARED IMPORTED)

set_target_properties(ndr PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;plug;vt;work;ar;sdf"
)

# Create imported target sdr
add_library(sdr SHARED IMPORTED)

set_target_properties(sdr PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;vt;ar;ndr;sdf"
)

# Create imported target pcp
add_library(pcp SHARED IMPORTED)

set_target_properties(pcp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;trace;vt;sdf;work;ar;python;TBB::tbb;Python3::Python"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target usd
add_library(usd SHARED IMPORTED)

set_target_properties(usd PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "arch;kind;pcp;sdf;ar;plug;tf;trace;ts;vt;work;python;TBB::tbb;Python3::Python"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target usdGeom
add_library(usdGeom SHARED IMPORTED)

set_target_properties(usdGeom PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "js;tf;plug;vt;sdf;trace;usd;work;TBB::tbb"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target usdVol
add_library(usdVol SHARED IMPORTED)

set_target_properties(usdVol PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;usd;usdGeom"
)

# Create imported target usdMedia
add_library(usdMedia SHARED IMPORTED)

set_target_properties(usdMedia PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;vt;sdf;usd;usdGeom"
)

# Create imported target usdShade
add_library(usdShade SHARED IMPORTED)

set_target_properties(usdShade PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;vt;js;sdf;ndr;sdr;usd;usdGeom;TBB::tbb"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target usdLux
add_library(usdLux SHARED IMPORTED)

set_target_properties(usdLux PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;vt;ndr;sdf;usd;usdGeom;usdShade"
)

# Create imported target usdProc
add_library(usdProc SHARED IMPORTED)

set_target_properties(usdProc PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;usd;usdGeom"
)

# Create imported target usdRender
add_library(usdRender SHARED IMPORTED)

set_target_properties(usdRender PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gf;tf;usd;usdGeom;usdShade"
)

# Create imported target usdHydra
add_library(usdHydra SHARED IMPORTED)

set_target_properties(usdHydra PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;usd;usdShade"
)

# Create imported target usdRi
add_library(usdRi SHARED IMPORTED)

set_target_properties(usdRi PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;vt;sdf;usd;usdShade;usdGeom"
)

# Create imported target usdSemantics
add_library(usdSemantics SHARED IMPORTED)

set_target_properties(usdSemantics PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;vt;usd"
)

# Create imported target usdSkel
add_library(usdSkel SHARED IMPORTED)

set_target_properties(usdSkel PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "arch;gf;tf;trace;vt;work;sdf;usd;usdGeom;TBB::tbb"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target usdUI
add_library(usdUI SHARED IMPORTED)

set_target_properties(usdUI PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;vt;sdf;usd"
)

# Create imported target usdUtils
add_library(usdUtils SHARED IMPORTED)

set_target_properties(usdUtils PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "arch;tf;gf;sdf;usd;usdGeom;usdShade;TBB::tbb"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target usdPhysics
add_library(usdPhysics SHARED IMPORTED)

set_target_properties(usdPhysics PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;plug;vt;sdf;trace;usd;usdGeom;usdShade;work;TBB::tbb"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target usdMtlx
add_library(usdMtlx SHARED IMPORTED)

set_target_properties(usdMtlx PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "arch;gf;ndr;sdf;sdr;tf;vt;usd;usdGeom;usdShade;usdUI;usdUtils;MaterialXCore;MaterialXFormat"
)

# Create imported target usdValidation
add_library(usdValidation SHARED IMPORTED)

set_target_properties(usdValidation PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "sdf;plug;tf;gf;usd;work;TBB::tbb"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target usdGeomValidators
add_library(usdGeomValidators SHARED IMPORTED)

set_target_properties(usdGeomValidators PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;plug;sdf;usd;usdGeom;usdValidation"
)

# Create imported target usdShadeValidators
add_library(usdShadeValidators SHARED IMPORTED)

set_target_properties(usdShadeValidators PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;plug;sdf;usd;ndr;sdr;usdShade;usdValidation"
)

# Create imported target usdSkelValidators
add_library(usdSkelValidators SHARED IMPORTED)

set_target_properties(usdSkelValidators PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;plug;sdf;usd;usdSkel;usdValidation"
)

# Create imported target usdUtilsValidators
add_library(usdUtilsValidators SHARED IMPORTED)

set_target_properties(usdUtilsValidators PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;plug;sdf;usd;usdUtils;usdValidation"
)

# Create imported target garch
add_library(garch SHARED IMPORTED)

set_target_properties(garch PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "arch;tf;/usr/lib/x86_64-linux-gnu/libSM.so;/usr/lib/x86_64-linux-gnu/libICE.so;/usr/lib/x86_64-linux-gnu/libX11.so;/usr/lib/x86_64-linux-gnu/libXext.so;OpenGL::GL"
)

# Create imported target hf
add_library(hf SHARED IMPORTED)

set_target_properties(hf PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "plug;tf;trace"
)

# Create imported target hio
add_library(hio SHARED IMPORTED)

set_target_properties(hio PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "arch;js;plug;tf;vt;trace;ar;hf"
)

# Create imported target cameraUtil
add_library(cameraUtil SHARED IMPORTED)

set_target_properties(cameraUtil PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;gf"
)

# Create imported target pxOsd
add_library(pxOsd SHARED IMPORTED)

set_target_properties(pxOsd PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;gf;vt;opensubdiv::opensubdiv"
)

# Create imported target geomUtil
add_library(geomUtil SHARED IMPORTED)

set_target_properties(geomUtil PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "arch;gf;tf;vt;pxOsd"
)

# Create imported target glf
add_library(glf SHARED IMPORTED)

set_target_properties(glf PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "ar;arch;garch;gf;hf;hio;plug;tf;trace;sdf"
)

# Create imported target hgi
add_library(hgi SHARED IMPORTED)

set_target_properties(hgi PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gf;plug;tf;hio"
)

# Create imported target hgiGL
add_library(hgiGL SHARED IMPORTED)

set_target_properties(hgiGL PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "arch;garch;hgi;tf;trace"
)

# Create imported target hgiInterop
add_library(hgiInterop SHARED IMPORTED)

set_target_properties(hgiInterop PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gf;tf;hgi;vt;garch"
)

# Create imported target hd
add_library(hd SHARED IMPORTED)

set_target_properties(hd PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "plug;tf;trace;vt;work;sdf;cameraUtil;hf;pxOsd;sdr;TBB::tbb"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target hdar
add_library(hdar SHARED IMPORTED)

set_target_properties(hdar PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "hd;ar"
)

# Create imported target hdGp
add_library(hdGp SHARED IMPORTED)

set_target_properties(hdGp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "hd;hf;TBB::tbb"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target hdsi
add_library(hdsi SHARED IMPORTED)

set_target_properties(hdsi PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "plug;tf;trace;vt;work;sdf;cameraUtil;geomUtil;hf;hd;pxOsd"
)

# Create imported target hdMtlx
add_library(hdMtlx SHARED IMPORTED)

set_target_properties(hdMtlx PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gf;hd;sdf;sdr;tf;trace;usdMtlx;vt;MaterialXCore;MaterialXFormat"
)

# Create imported target hdSt
add_library(hdSt SHARED IMPORTED)

set_target_properties(hdSt PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "hio;garch;glf;hd;hdsi;hgiGL;hgiInterop;sdr;tf;trace;hdMtlx;TBB::tbb;opensubdiv::opensubdiv;MaterialXGenShader;MaterialXRender;MaterialXCore;MaterialXFormat;MaterialXGenGlsl;MaterialXGenMsl"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target hdx
add_library(hdx SHARED IMPORTED)

set_target_properties(hdx PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "plug;tf;vt;gf;work;garch;glf;pxOsd;hd;hdSt;hgi;hgiInterop;cameraUtil;sdf"
)

# Create imported target usdImaging
add_library(usdImaging SHARED IMPORTED)

set_target_properties(usdImaging PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gf;tf;plug;trace;vt;work;geomUtil;hd;hdar;hio;pxOsd;sdf;usd;usdGeom;usdLux;usdRender;usdShade;usdVol;ar;TBB::tbb"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target usdImagingGL
add_library(usdImagingGL SHARED IMPORTED)

set_target_properties(usdImagingGL PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gf;tf;plug;trace;vt;work;hio;garch;glf;hd;hdsi;hdx;pxOsd;sdf;sdr;usd;usdGeom;usdHydra;usdShade;usdImaging;ar;TBB::tbb"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target usdProcImaging
add_library(usdProcImaging SHARED IMPORTED)

set_target_properties(usdProcImaging PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "usdImaging;usdProc"
)

# Create imported target usdRiPxrImaging
add_library(usdRiPxrImaging SHARED IMPORTED)

set_target_properties(usdRiPxrImaging PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gf;tf;plug;trace;vt;work;hd;pxOsd;sdf;usd;usdGeom;usdLux;usdShade;usdImaging;usdVol;ar;TBB::tbb"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target usdSkelImaging
add_library(usdSkelImaging SHARED IMPORTED)

set_target_properties(usdSkelImaging PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "hio;hd;usdImaging;usdSkel"
)

# Create imported target usdVolImaging
add_library(usdVolImaging SHARED IMPORTED)

set_target_properties(usdVolImaging PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "usdImaging"
)

# Create imported target usdAppUtils
add_library(usdAppUtils SHARED IMPORTED)

set_target_properties(usdAppUtils PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "garch;gf;hio;sdf;tf;usd;usdGeom;usdImagingGL"
)

# Create imported target usdviewq
add_library(usdviewq SHARED IMPORTED)

set_target_properties(usdviewq PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;usd;usdGeom;hd"
)

# Create imported target usdBakeMtlx
add_library(usdBakeMtlx SHARED IMPORTED)

set_target_properties(usdBakeMtlx PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "tf;sdr;usdMtlx;usdShade;hd;hdMtlx;usdImaging;MaterialXCore;MaterialXFormat;MaterialXRenderGlsl"
)

if(CMAKE_VERSION VERSION_LESS 2.8.12)
  message(FATAL_ERROR "This file relies on consumers using CMake 2.8.12 or greater.")
endif()

# Load information for each installed configuration.
file(GLOB _cmake_config_files "${CMAKE_CURRENT_LIST_DIR}/pxrTargets-*.cmake")
foreach(_cmake_config_file IN LISTS _cmake_config_files)
  include("${_cmake_config_file}")
endforeach()
unset(_cmake_config_file)
unset(_cmake_config_files)

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(_cmake_target IN LISTS _cmake_import_check_targets)
  foreach(_cmake_file IN LISTS "_cmake_import_check_files_for_${_cmake_target}")
    if(NOT EXISTS "${_cmake_file}")
      message(FATAL_ERROR "The imported target \"${_cmake_target}\" references the file
   \"${_cmake_file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_cmake_file)
  unset("_cmake_import_check_files_for_${_cmake_target}")
endforeach()
unset(_cmake_target)
unset(_cmake_import_check_targets)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
